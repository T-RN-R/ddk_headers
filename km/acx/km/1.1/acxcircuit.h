/*++

Copyright (c) Microsoft Corporation.  All rights reserved.

Module Name:

    AcxCircuit.h

Abstract:

    This is the interfaces for the Audio Class eXtension circuit object

Environment:

    Kernel-mode.

Revision History:

--*/

//
// NOTE: This header is generated by stubwork.  Please make any 
//       modifications to the corresponding template files 
//       (.x or .y) and use stubwork to regenerate the header
//

#ifndef _ACXCIRCUIT_H_
#define _ACXCIRCUIT_H_

#ifndef WDF_EXTERN_C
  #ifdef __cplusplus
    #define WDF_EXTERN_C       extern "C"
    #define WDF_EXTERN_C_START extern "C" {
    #define WDF_EXTERN_C_END   }
  #else
    #define WDF_EXTERN_C
    #define WDF_EXTERN_C_START
    #define WDF_EXTERN_C_END
  #endif
#endif

WDF_EXTERN_C_START



#if (NTDDI_VERSION >= NTDDI_WIN2K)




typedef
_Function_class_(EVT_ACX_CIRCUIT_PREPARE_HARDWARE)
_IRQL_requires_same_
_IRQL_requires_max_(PASSIVE_LEVEL)
NTSTATUS
NTAPI
EVT_ACX_CIRCUIT_PREPARE_HARDWARE(
    _In_
    WDFDEVICE Device,
    _In_
    ACXCIRCUIT Circuit,
    _In_
    WDFCMRESLIST ResourcesRaw,
    _In_
    WDFCMRESLIST ResourcesTranslated
    );

typedef EVT_ACX_CIRCUIT_PREPARE_HARDWARE *PFN_ACX_CIRCUIT_PREPARE_HARDWARE;

typedef
_Function_class_(EVT_ACX_CIRCUIT_RELEASE_HARDWARE)
_IRQL_requires_same_
_IRQL_requires_max_(PASSIVE_LEVEL)
NTSTATUS
NTAPI
EVT_ACX_CIRCUIT_RELEASE_HARDWARE(
    _In_
    WDFDEVICE Device,
    _In_
    ACXCIRCUIT Circuit,
    _In_
    WDFCMRESLIST ResourcesTranslated
    );

typedef EVT_ACX_CIRCUIT_RELEASE_HARDWARE *PFN_ACX_CIRCUIT_RELEASE_HARDWARE;

typedef
_Function_class_(EVT_ACX_CIRCUIT_POWER_UP)
_IRQL_requires_same_
_IRQL_requires_max_(PASSIVE_LEVEL)
NTSTATUS
NTAPI
EVT_ACX_CIRCUIT_POWER_UP(
    _In_
    WDFDEVICE Device,
    _In_
    ACXCIRCUIT Circuit,
    _In_
    WDF_POWER_DEVICE_STATE PreviousState
    );

typedef EVT_ACX_CIRCUIT_POWER_UP *PFN_ACX_CIRCUIT_POWER_UP;

typedef
_Function_class_(EVT_ACX_CIRCUIT_POWER_DOWN)
_IRQL_requires_same_
_IRQL_requires_max_(PASSIVE_LEVEL)
NTSTATUS
NTAPI
EVT_ACX_CIRCUIT_POWER_DOWN(
    _In_
    WDFDEVICE Device,
    _In_
    ACXCIRCUIT Circuit,
    _In_
    WDF_POWER_DEVICE_STATE TargetState
    );

typedef EVT_ACX_CIRCUIT_POWER_DOWN *PFN_ACX_CIRCUIT_POWER_DOWN;

typedef struct _ACX_CIRCUIT_PNPPOWER_CALLBACKS {
    ULONG                               Size;
    PFN_ACX_CIRCUIT_PREPARE_HARDWARE    EvtAcxCircuitPrepareHardware;
    PFN_ACX_CIRCUIT_RELEASE_HARDWARE    EvtAcxCircuitReleaseHardware;
    PFN_ACX_CIRCUIT_POWER_UP            EvtAcxCircuitPowerUp;
    PFN_ACX_CIRCUIT_POWER_DOWN          EvtAcxCircuitPowerDown;
} ACX_CIRCUIT_PNPPOWER_CALLBACKS, *PACX_CIRCUIT_PNPPOWER_CALLBACKS;

VOID
FORCEINLINE
ACX_CIRCUIT_PNPPOWER_CALLBACKS_INIT(
    _Out_ PACX_CIRCUIT_PNPPOWER_CALLBACKS PnpPowerCallbacks
    )
{
    RtlZeroMemory(PnpPowerCallbacks, sizeof(ACX_CIRCUIT_PNPPOWER_CALLBACKS));
    PnpPowerCallbacks->Size = ACX_STRUCTURE_SIZE(ACX_CIRCUIT_PNPPOWER_CALLBACKS);
}

typedef
_Function_class_(EVT_ACX_CIRCUIT_COMPOSITE_CIRCUIT_INITIALIZE)
_IRQL_requires_same_
_IRQL_requires_max_(PASSIVE_LEVEL)
NTSTATUS
NTAPI
EVT_ACX_CIRCUIT_COMPOSITE_CIRCUIT_INITIALIZE(
    _In_
    WDFDEVICE Device,
    _In_
    ACXCIRCUIT Circuit,
    _In_opt_
    ACXOBJECTBAG CircuitProperties
    );

typedef EVT_ACX_CIRCUIT_COMPOSITE_CIRCUIT_INITIALIZE *PFN_ACX_CIRCUIT_COMPOSITE_CIRCUIT_INITIALIZE;

typedef
_Function_class_(EVT_ACX_CIRCUIT_COMPOSITE_INITIALIZE)
_IRQL_requires_same_
_IRQL_requires_max_(PASSIVE_LEVEL)
NTSTATUS
NTAPI
EVT_ACX_CIRCUIT_COMPOSITE_INITIALIZE(
    _In_
    WDFDEVICE Device,
    _In_
    ACXCIRCUIT Circuit,
    _In_
    ACXOBJECTBAG CompositeProperties
    );

typedef EVT_ACX_CIRCUIT_COMPOSITE_INITIALIZE *PFN_ACX_CIRCUIT_COMPOSITE_INITIALIZE;

typedef
_Function_class_(EVT_ACX_CIRCUIT_COMPOSITE_DEINITIALIZE)
_IRQL_requires_same_
_IRQL_requires_max_(PASSIVE_LEVEL)
VOID
NTAPI
EVT_ACX_CIRCUIT_COMPOSITE_DEINITIALIZE(
    _In_
    WDFDEVICE Device,
    _In_
    ACXCIRCUIT Circuit,
    _In_opt_
    ACXOBJECTBAG CompositeProperties
    );

typedef EVT_ACX_CIRCUIT_COMPOSITE_DEINITIALIZE *PFN_ACX_CIRCUIT_COMPOSITE_DEINITIALIZE;

typedef struct _ACX_CIRCUIT_COMPOSITE_CALLBACKS {
    ULONG                                           Size;
    PFN_ACX_CIRCUIT_COMPOSITE_CIRCUIT_INITIALIZE    EvtAcxCircuitCompositeCircuitInitialize;
    PFN_ACX_CIRCUIT_COMPOSITE_INITIALIZE            EvtAcxCircuitCompositeInitialize;
    PFN_ACX_CIRCUIT_COMPOSITE_DEINITIALIZE          EvtAcxCircuitCompositeDeinitialize;
} ACX_CIRCUIT_COMPOSITE_CALLBACKS, *PACX_CIRCUIT_COMPOSITE_CALLBACKS;

VOID
FORCEINLINE
ACX_CIRCUIT_COMPOSITE_CALLBACKS_INIT(
    _Out_ PACX_CIRCUIT_COMPOSITE_CALLBACKS CompositeCallbacks
    )
{
    RtlZeroMemory(CompositeCallbacks, sizeof(ACX_CIRCUIT_COMPOSITE_CALLBACKS));
    CompositeCallbacks->Size = ACX_STRUCTURE_SIZE(ACX_CIRCUIT_COMPOSITE_CALLBACKS);
}

typedef
_Function_class_(EVT_ACX_CIRCUIT_CREATE_STREAM)
_IRQL_requires_same_
_IRQL_requires_max_(PASSIVE_LEVEL)
NTSTATUS
NTAPI
EVT_ACX_CIRCUIT_CREATE_STREAM(
    _In_
    WDFDEVICE Device,
    _In_
    ACXCIRCUIT Circuit,
    _In_
    ACXPIN Pin,
    _In_
    PACXSTREAM_INIT StreamInit,
    _In_
    ACXDATAFORMAT StreamFormat,
    _In_
    const GUID * SignalProcessingMode,
    _In_
    ACXOBJECTBAG VarArguments
    );

typedef EVT_ACX_CIRCUIT_CREATE_STREAM *PFN_ACX_CIRCUIT_CREATE_STREAM;

//
// ACX circuit structures.
//
typedef enum _ACX_CIRCUIT_TYPE {
    AcxCircuitTypeOther     = 0,
    AcxCircuitTypeRender    = 1,
    AcxCircuitTypeCapture   = 2,
    AcxCircuitTypeMaximum   // for validation
} ACX_CIRCUIT_TYPE, *PACX_CIRCUIT_TYPE;

//
// NTSTATUS
// AcxCircuitStopIo(
//     _In_ ACXCIRCUIT Circuit,
//     _In_ ULONG Flags
//     );
//
// NTSTATUS
// AcxCircuitStopIoWithTag(
//     _In_ ACXCIRCUIT Circuit,
//     _In_ ULONG Flags,
//     _In_ PVOID Tag
//     );
//
// VOID
// AcxCircuitResumeIo(
//     _In_ ACXCIRCUIT Circuit,
//     );
//
// VOID
// AcxCircuitResumeIoWithTag(
//     _In_ ACXCIRCUIT Circuit,
//     _In_ PVOID Tag
//     );
//
#define AcxCircuitStopIo(Circuit, Flags) \
        AcxCircuitStopIoWithTag(Circuit, Flags, NULL)

#define AcxCircuitStopIoWithTag(Circuit, Flags, Tag) \
        AcxCircuitStopIoActual(Circuit, Flags, Tag, __LINE__, __FILE__)
        
#define AcxCircuitResumeIo(Circuit) \
        AcxCircuitResumeIoWithTag(Circuit, NULL)

#define AcxCircuitResumeIoWithTag(Circuit, Tag) \
        AcxCircuitResumeIoActual(Circuit, Tag, __LINE__, __FILE__)
        
typedef enum _ACX_STOP_IO_FLAGS {
    AcxStopIoNoFlags        = 0x00000000,
    AcxStopIoValidFlags     = 0x00000000
} ACX_STOP_IO_FLAGS;



//
// Config structures
//
typedef struct _ACX_FACTORY_CIRCUIT_ADD_CIRCUIT {
    ULONG                   Size;
    ULONG                   Flags;

    GUID                    CircuitUniqueId;

    HANDLE                  CompositeProperties;    // optional
    HANDLE                  FactoryProperties;      // optional
    HANDLE                  CircuitProperties;      // optional

    PCUNICODE_STRING        TargetSymbolicLinkName; // optional.
} ACX_FACTORY_CIRCUIT_ADD_CIRCUIT, *PACX_FACTORY_CIRCUIT_ADD_CIRCUIT;

typedef enum _ACX_FACTORY_CIRCUIT_ADD_CIRCUIT_FLAGS {
    AcxFactoryCircitAddCircuitConfigNoFlags    = 0x00000000,
    AcxFactoryCircitAddCircuitConfigValidFlags = 0x00000000
} ACX_FACTORY_CIRCUIT_ADD_CIRCUIT_FLAGS;

VOID
FORCEINLINE
ACX_FACTORY_CIRCUIT_ADD_CIRCUIT_INIT(
    _Out_ PACX_FACTORY_CIRCUIT_ADD_CIRCUIT Parameters
    )
{
    RtlZeroMemory(Parameters, sizeof(ACX_FACTORY_CIRCUIT_ADD_CIRCUIT));
    Parameters->Size = ACX_STRUCTURE_SIZE(ACX_FACTORY_CIRCUIT_ADD_CIRCUIT);
}

typedef struct _ACX_FACTORY_CIRCUIT_REMOVE_CIRCUIT {
    ULONG                   Size;
    ULONG                   Flags;

    GUID                    CircuitUniqueId;
} ACX_FACTORY_CIRCUIT_REMOVE_CIRCUIT, *PACX_FACTORY_CIRCUIT_REMOVE_CIRCUIT;

typedef enum _ACX_FACTORY_CIRCUIT_REMOVE_CIRCUIT_FLAGS {
    AcxFactoryCircitRemoveCircuitConfigNoFlags    = 0x00000000,
    AcxFactoryCircitRemoveCircuitConfigValidFlags = 0x00000000
} ACX_FACTORY_CIRCUIT_REMOVE_CIRCUIT_FLAGS;

VOID
FORCEINLINE
ACX_FACTORY_CIRCUIT_REMOVE_CIRCUIT_INIT(
    _Out_ PACX_FACTORY_CIRCUIT_REMOVE_CIRCUIT Parameters
    )
{
    RtlZeroMemory(Parameters, sizeof(ACX_FACTORY_CIRCUIT_REMOVE_CIRCUIT));
    Parameters->Size = ACX_STRUCTURE_SIZE(ACX_FACTORY_CIRCUIT_REMOVE_CIRCUIT);
}

//
// ACX factory circuits structures.
//
typedef
_Function_class_(EVT_ACX_FACTORY_CIRCUIT_CREATE_CIRCUITDEVICE)
_IRQL_requires_same_
_IRQL_requires_max_(PASSIVE_LEVEL)
NTSTATUS
NTAPI
EVT_ACX_FACTORY_CIRCUIT_CREATE_CIRCUITDEVICE(
    _In_
    WDFDEVICE Parent,
    _In_
    ACXFACTORYCIRCUIT Factory,
    _In_
    PACX_FACTORY_CIRCUIT_ADD_CIRCUIT Config,
    _Out_
    WDFDEVICE * Device
    );

typedef EVT_ACX_FACTORY_CIRCUIT_CREATE_CIRCUITDEVICE *PFN_ACX_FACTORY_CIRCUIT_CREATE_CIRCUITDEVICE;

typedef
_Function_class_(EVT_ACX_FACTORY_CIRCUIT_DELETE_CIRCUITDEVICE)
_IRQL_requires_same_
_IRQL_requires_max_(PASSIVE_LEVEL)
NTSTATUS
NTAPI
EVT_ACX_FACTORY_CIRCUIT_DELETE_CIRCUITDEVICE(
    _In_
    WDFDEVICE Parent,
    _In_
    ACXFACTORYCIRCUIT Factory,
    _In_
    WDFDEVICE Device
    );

typedef EVT_ACX_FACTORY_CIRCUIT_DELETE_CIRCUITDEVICE *PFN_ACX_FACTORY_CIRCUIT_DELETE_CIRCUITDEVICE;

typedef
_Function_class_(EVT_ACX_FACTORY_CIRCUIT_CREATE_CIRCUIT)
_IRQL_requires_same_
_IRQL_requires_max_(PASSIVE_LEVEL)
NTSTATUS
NTAPI
EVT_ACX_FACTORY_CIRCUIT_CREATE_CIRCUIT(
    _In_
    WDFDEVICE Parent,
    _In_
    WDFDEVICE Device,
    _In_
    ACXFACTORYCIRCUIT Factory,
    _In_
    PACX_FACTORY_CIRCUIT_ADD_CIRCUIT Config,
    _In_
    PACXCIRCUIT_INIT CircuitInit
    );

typedef EVT_ACX_FACTORY_CIRCUIT_CREATE_CIRCUIT *PFN_ACX_FACTORY_CIRCUIT_CREATE_CIRCUIT;

typedef struct _ACX_FACTORY_CIRCUIT_OPERATION_CALLBACKS {
    ULONG  Size;
    PFN_ACX_FACTORY_CIRCUIT_CREATE_CIRCUITDEVICE    EvtAcxFactoryCircuitCreateCircuitDevice;
    PFN_ACX_FACTORY_CIRCUIT_DELETE_CIRCUITDEVICE    EvtAcxFactoryCircuitDeleteCircuitDevice;
    PFN_ACX_FACTORY_CIRCUIT_CREATE_CIRCUIT          EvtAcxFactoryCircuitCreateCircuit;
} ACX_FACTORY_CIRCUIT_OPERATION_CALLBACKS, *PACX_FACTORY_CIRCUIT_OPERATION_CALLBACKS;

VOID
FORCEINLINE
ACX_FACTORY_CIRCUIT_OPERATION_CALLBACKS_INIT(
    _Out_ PACX_FACTORY_CIRCUIT_OPERATION_CALLBACKS Config
    )
{
    RtlZeroMemory(Config, sizeof(ACX_FACTORY_CIRCUIT_OPERATION_CALLBACKS));
    Config->Size = ACX_STRUCTURE_SIZE(ACX_FACTORY_CIRCUIT_OPERATION_CALLBACKS);
}

typedef
_Function_class_(EVT_ACX_FACTORY_CIRCUIT_PREPARE_HARDWARE)
_IRQL_requires_same_
_IRQL_requires_max_(PASSIVE_LEVEL)
NTSTATUS
NTAPI
EVT_ACX_FACTORY_CIRCUIT_PREPARE_HARDWARE(
    _In_
    WDFDEVICE Device,
    _In_
    ACXFACTORYCIRCUIT Factory,
    _In_
    WDFCMRESLIST ResourcesRaw,
    _In_
    WDFCMRESLIST ResourcesTranslated
    );

typedef EVT_ACX_FACTORY_CIRCUIT_PREPARE_HARDWARE *PFN_ACX_FACTORY_CIRCUIT_PREPARE_HARDWARE;

typedef
_Function_class_(EVT_ACX_FACTORY_CIRCUIT_RELEASE_HARDWARE)
_IRQL_requires_same_
_IRQL_requires_max_(PASSIVE_LEVEL)
NTSTATUS
NTAPI
EVT_ACX_FACTORY_CIRCUIT_RELEASE_HARDWARE(
    _In_
    WDFDEVICE Device,
    _In_
    ACXFACTORYCIRCUIT Factory,
    _In_
    WDFCMRESLIST ResourcesTranslated
    );

typedef EVT_ACX_FACTORY_CIRCUIT_RELEASE_HARDWARE *PFN_ACX_FACTORY_CIRCUIT_RELEASE_HARDWARE;

typedef
_Function_class_(EVT_ACX_FACTORY_CIRCUIT_POWER_UP)
_IRQL_requires_same_
_IRQL_requires_max_(PASSIVE_LEVEL)
NTSTATUS
NTAPI
EVT_ACX_FACTORY_CIRCUIT_POWER_UP(
    _In_
    WDFDEVICE Device,
    _In_
    ACXFACTORYCIRCUIT Factory,
    _In_
    WDF_POWER_DEVICE_STATE PreviousState
    );

typedef EVT_ACX_FACTORY_CIRCUIT_POWER_UP *PFN_ACX_FACTORY_CIRCUIT_POWER_UP;

typedef
_Function_class_(EVT_ACX_FACTORY_CIRCUIT_POWER_DOWN)
_IRQL_requires_same_
_IRQL_requires_max_(PASSIVE_LEVEL)
NTSTATUS
NTAPI
EVT_ACX_FACTORY_CIRCUIT_POWER_DOWN(
    _In_
    WDFDEVICE Device,
    _In_
    ACXFACTORYCIRCUIT Factory,
    _In_
    WDF_POWER_DEVICE_STATE TargetState
    );

typedef EVT_ACX_FACTORY_CIRCUIT_POWER_DOWN *PFN_ACX_FACTORY_CIRCUIT_POWER_DOWN;

typedef struct _ACX_FACTORY_CIRCUIT_PNPPOWER_CALLBACKS {
    ULONG Size;
    PFN_ACX_FACTORY_CIRCUIT_PREPARE_HARDWARE    EvtAcxFactoryCircuitPrepareHardware;
    PFN_ACX_FACTORY_CIRCUIT_RELEASE_HARDWARE    EvtAcxFactoryCircuitReleaseHardware;
    PFN_ACX_FACTORY_CIRCUIT_POWER_UP            EvtAcxFactoryCircuitPowerUp;
    PFN_ACX_FACTORY_CIRCUIT_POWER_DOWN          EvtAcxFactoryCircuitPowerDown;
} ACX_FACTORY_CIRCUIT_PNPPOWER_CALLBACKS, *PACX_FACTORY_CIRCUIT_PNPPOWER_CALLBACKS;

VOID
FORCEINLINE
ACX_FACTORY_CIRCUIT_PNPPOWER_CALLBACKS_INIT(
    _Out_ PACX_FACTORY_CIRCUIT_PNPPOWER_CALLBACKS PnpPowerCallbacks
    )
{
    RtlZeroMemory(PnpPowerCallbacks, sizeof(ACX_FACTORY_CIRCUIT_PNPPOWER_CALLBACKS));
    PnpPowerCallbacks->Size = ACX_STRUCTURE_SIZE(ACX_FACTORY_CIRCUIT_PNPPOWER_CALLBACKS);
}


//
// ACX Function: AcxCircuitInitAllocate
//
typedef
_Must_inspect_result_
_IRQL_requires_max_(PASSIVE_LEVEL)
WDFAPI
PACXCIRCUIT_INIT
(NTAPI *PFN_ACXCIRCUITINITALLOCATE)(
    _In_
    PACX_DRIVER_GLOBALS DriverGlobals,
    _In_
    WDFDEVICE Device
    );

_Must_inspect_result_
_IRQL_requires_max_(PASSIVE_LEVEL)
FORCEINLINE
PACXCIRCUIT_INIT
AcxCircuitInitAllocate(
    _In_
    WDFDEVICE Device
    )
{
    return ((PFN_ACXCIRCUITINITALLOCATE) AcxFunctions[AcxCircuitInitAllocateTableIndex])(AcxDriverGlobals, Device);
}

//
// ACX Function: AcxCircuitInitFree
//
typedef
_IRQL_requires_max_(DISPATCH_LEVEL)
WDFAPI
VOID
(NTAPI *PFN_ACXCIRCUITINITFREE)(
    _In_
    PACX_DRIVER_GLOBALS DriverGlobals,
    _In_
    PACXCIRCUIT_INIT CircuitInit
    );

_IRQL_requires_max_(DISPATCH_LEVEL)
FORCEINLINE
VOID
AcxCircuitInitFree(
    _In_
    PACXCIRCUIT_INIT CircuitInit
    )
{
    ((PFN_ACXCIRCUITINITFREE) AcxFunctions[AcxCircuitInitFreeTableIndex])(AcxDriverGlobals, CircuitInit);
}

//
// ACX Function: AcxCircuitInitSetComponentId
//
typedef
_IRQL_requires_max_(DISPATCH_LEVEL)
WDFAPI
VOID
(NTAPI *PFN_ACXCIRCUITINITSETCOMPONENTID)(
    _In_
    PACX_DRIVER_GLOBALS DriverGlobals,
    _In_
    PACXCIRCUIT_INIT CircuitInit,
    _In_
    CONST GUID* ComponentId
    );

_IRQL_requires_max_(DISPATCH_LEVEL)
FORCEINLINE
VOID
AcxCircuitInitSetComponentId(
    _In_
    PACXCIRCUIT_INIT CircuitInit,
    _In_
    CONST GUID* ComponentId
    )
{
    ((PFN_ACXCIRCUITINITSETCOMPONENTID) AcxFunctions[AcxCircuitInitSetComponentIdTableIndex])(AcxDriverGlobals, CircuitInit, ComponentId);
}

//
// ACX Function: AcxCircuitInitAssignComponentUri
//
typedef
_Must_inspect_result_
_IRQL_requires_max_(PASSIVE_LEVEL)
WDFAPI
NTSTATUS
(NTAPI *PFN_ACXCIRCUITINITASSIGNCOMPONENTURI)(
    _In_
    PACX_DRIVER_GLOBALS DriverGlobals,
    _In_
    PACXCIRCUIT_INIT CircuitInit,
    _In_
    PCUNICODE_STRING ComponentUri
    );

_Must_inspect_result_
_IRQL_requires_max_(PASSIVE_LEVEL)
FORCEINLINE
NTSTATUS
AcxCircuitInitAssignComponentUri(
    _In_
    PACXCIRCUIT_INIT CircuitInit,
    _In_
    PCUNICODE_STRING ComponentUri
    )
{
    return ((PFN_ACXCIRCUITINITASSIGNCOMPONENTURI) AcxFunctions[AcxCircuitInitAssignComponentUriTableIndex])(AcxDriverGlobals, CircuitInit, ComponentUri);
}

//
// ACX Function: AcxCircuitInitAssignName
//
typedef
_Must_inspect_result_
_IRQL_requires_max_(PASSIVE_LEVEL)
WDFAPI
NTSTATUS
(NTAPI *PFN_ACXCIRCUITINITASSIGNNAME)(
    _In_
    PACX_DRIVER_GLOBALS DriverGlobals,
    _In_
    PACXCIRCUIT_INIT CircuitInit,
    _In_
    PCUNICODE_STRING CircuitName
    );

_Must_inspect_result_
_IRQL_requires_max_(PASSIVE_LEVEL)
FORCEINLINE
NTSTATUS
AcxCircuitInitAssignName(
    _In_
    PACXCIRCUIT_INIT CircuitInit,
    _In_
    PCUNICODE_STRING CircuitName
    )
{
    return ((PFN_ACXCIRCUITINITASSIGNNAME) AcxFunctions[AcxCircuitInitAssignNameTableIndex])(AcxDriverGlobals, CircuitInit, CircuitName);
}

//
// ACX Function: AcxCircuitInitAssignCategories
//
typedef
_Must_inspect_result_
_IRQL_requires_max_(PASSIVE_LEVEL)
WDFAPI
NTSTATUS
(NTAPI *PFN_ACXCIRCUITINITASSIGNCATEGORIES)(
    _In_
    PACX_DRIVER_GLOBALS DriverGlobals,
    _In_
    PACXCIRCUIT_INIT CircuitInit,
    _In_reads_(CategoriesCount)
    CONST GUID* Categories,
    _In_
    ULONG CategoriesCount
    );

_Must_inspect_result_
_IRQL_requires_max_(PASSIVE_LEVEL)
FORCEINLINE
NTSTATUS
AcxCircuitInitAssignCategories(
    _In_
    PACXCIRCUIT_INIT CircuitInit,
    _In_reads_(CategoriesCount)
    CONST GUID* Categories,
    _In_
    ULONG CategoriesCount
    )
{
    return ((PFN_ACXCIRCUITINITASSIGNCATEGORIES) AcxFunctions[AcxCircuitInitAssignCategoriesTableIndex])(AcxDriverGlobals, CircuitInit, Categories, CategoriesCount);
}

//
// ACX Function: AcxCircuitInitSetCircuitType
//
typedef
_IRQL_requires_max_(DISPATCH_LEVEL)
WDFAPI
VOID
(NTAPI *PFN_ACXCIRCUITINITSETCIRCUITTYPE)(
    _In_
    PACX_DRIVER_GLOBALS DriverGlobals,
    _In_
    PACXCIRCUIT_INIT CircuitInit,
    _In_
    ACX_CIRCUIT_TYPE CircuitType
    );

_IRQL_requires_max_(DISPATCH_LEVEL)
FORCEINLINE
VOID
AcxCircuitInitSetCircuitType(
    _In_
    PACXCIRCUIT_INIT CircuitInit,
    _In_
    ACX_CIRCUIT_TYPE CircuitType
    )
{
    ((PFN_ACXCIRCUITINITSETCIRCUITTYPE) AcxFunctions[AcxCircuitInitSetCircuitTypeTableIndex])(AcxDriverGlobals, CircuitInit, CircuitType);
}

//
// ACX Function: AcxCircuitInitAssignProperties
//
typedef
_Must_inspect_result_
_IRQL_requires_max_(PASSIVE_LEVEL)
WDFAPI
NTSTATUS
(NTAPI *PFN_ACXCIRCUITINITASSIGNPROPERTIES)(
    _In_
    PACX_DRIVER_GLOBALS DriverGlobals,
    _In_
    PACXCIRCUIT_INIT CircuitInit,
    _In_reads_(PropertiesCount)
    PACX_PROPERTY_ITEM Properties,
    _In_
    ULONG PropertiesCount
    );

_Must_inspect_result_
_IRQL_requires_max_(PASSIVE_LEVEL)
FORCEINLINE
NTSTATUS
AcxCircuitInitAssignProperties(
    _In_
    PACXCIRCUIT_INIT CircuitInit,
    _In_reads_(PropertiesCount)
    PACX_PROPERTY_ITEM Properties,
    _In_
    ULONG PropertiesCount
    )
{
    return ((PFN_ACXCIRCUITINITASSIGNPROPERTIES) AcxFunctions[AcxCircuitInitAssignPropertiesTableIndex])(AcxDriverGlobals, CircuitInit, Properties, PropertiesCount);
}

//
// ACX Function: AcxCircuitInitAssignMethods
//
typedef
_Must_inspect_result_
_IRQL_requires_max_(PASSIVE_LEVEL)
WDFAPI
NTSTATUS
(NTAPI *PFN_ACXCIRCUITINITASSIGNMETHODS)(
    _In_
    PACX_DRIVER_GLOBALS DriverGlobals,
    _In_
    PACXCIRCUIT_INIT CircuitInit,
    _In_reads_(MethodsCount)
    PACX_METHOD_ITEM Methods,
    _In_
    ULONG MethodsCount
    );

_Must_inspect_result_
_IRQL_requires_max_(PASSIVE_LEVEL)
FORCEINLINE
NTSTATUS
AcxCircuitInitAssignMethods(
    _In_
    PACXCIRCUIT_INIT CircuitInit,
    _In_reads_(MethodsCount)
    PACX_METHOD_ITEM Methods,
    _In_
    ULONG MethodsCount
    )
{
    return ((PFN_ACXCIRCUITINITASSIGNMETHODS) AcxFunctions[AcxCircuitInitAssignMethodsTableIndex])(AcxDriverGlobals, CircuitInit, Methods, MethodsCount);
}

//
// ACX Function: AcxCircuitInitSetAcxCircuitPnpPowerCallbacks
//
typedef
_IRQL_requires_max_(PASSIVE_LEVEL)
WDFAPI
VOID
(NTAPI *PFN_ACXCIRCUITINITSETACXCIRCUITPNPPOWERCALLBACKS)(
    _In_
    PACX_DRIVER_GLOBALS DriverGlobals,
    _In_
    PACXCIRCUIT_INIT CircuitInit,
    _In_
    PACX_CIRCUIT_PNPPOWER_CALLBACKS EvtPnpPowerCallbacks
    );

_IRQL_requires_max_(PASSIVE_LEVEL)
FORCEINLINE
VOID
AcxCircuitInitSetAcxCircuitPnpPowerCallbacks(
    _In_
    PACXCIRCUIT_INIT CircuitInit,
    _In_
    PACX_CIRCUIT_PNPPOWER_CALLBACKS EvtPnpPowerCallbacks
    )
{
    ((PFN_ACXCIRCUITINITSETACXCIRCUITPNPPOWERCALLBACKS) AcxFunctions[AcxCircuitInitSetAcxCircuitPnpPowerCallbacksTableIndex])(AcxDriverGlobals, CircuitInit, EvtPnpPowerCallbacks);
}

//
// ACX Function: AcxCircuitInitSetAcxCircuitCompositeCallbacks
//
typedef
_IRQL_requires_max_(PASSIVE_LEVEL)
WDFAPI
VOID
(NTAPI *PFN_ACXCIRCUITINITSETACXCIRCUITCOMPOSITECALLBACKS)(
    _In_
    PACX_DRIVER_GLOBALS DriverGlobals,
    _In_
    PACXCIRCUIT_INIT CircuitInit,
    _In_
    PACX_CIRCUIT_COMPOSITE_CALLBACKS EvtCompositeCallbacks
    );

_IRQL_requires_max_(PASSIVE_LEVEL)
FORCEINLINE
VOID
AcxCircuitInitSetAcxCircuitCompositeCallbacks(
    _In_
    PACXCIRCUIT_INIT CircuitInit,
    _In_
    PACX_CIRCUIT_COMPOSITE_CALLBACKS EvtCompositeCallbacks
    )
{
    ((PFN_ACXCIRCUITINITSETACXCIRCUITCOMPOSITECALLBACKS) AcxFunctions[AcxCircuitInitSetAcxCircuitCompositeCallbacksTableIndex])(AcxDriverGlobals, CircuitInit, EvtCompositeCallbacks);
}

//
// ACX Function: AcxCircuitInitAssignAcxRequestPreprocessCallback
//
typedef
_Must_inspect_result_
_IRQL_requires_max_(PASSIVE_LEVEL)
WDFAPI
NTSTATUS
(NTAPI *PFN_ACXCIRCUITINITASSIGNACXREQUESTPREPROCESSCALLBACK)(
    _In_
    PACX_DRIVER_GLOBALS DriverGlobals,
    _In_
    PACXCIRCUIT_INIT CircuitInit,
    _In_
    PFN_ACX_OBJECT_PREPROCESS_REQUEST EvtObjectAcxRequestPreprocess,
    _In_opt_
    ACXCONTEXT DriverContext,
    _In_
    ACX_REQUEST_TYPE RequestType,
    _In_opt_
    CONST GUID* Set,
    _In_
    ULONG Id
    );

_Must_inspect_result_
_IRQL_requires_max_(PASSIVE_LEVEL)
FORCEINLINE
NTSTATUS
AcxCircuitInitAssignAcxRequestPreprocessCallback(
    _In_
    PACXCIRCUIT_INIT CircuitInit,
    _In_
    PFN_ACX_OBJECT_PREPROCESS_REQUEST EvtObjectAcxRequestPreprocess,
    _In_opt_
    ACXCONTEXT DriverContext,
    _In_
    ACX_REQUEST_TYPE RequestType,
    _In_opt_
    CONST GUID* Set,
    _In_
    ULONG Id
    )
{
    return ((PFN_ACXCIRCUITINITASSIGNACXREQUESTPREPROCESSCALLBACK) AcxFunctions[AcxCircuitInitAssignAcxRequestPreprocessCallbackTableIndex])(AcxDriverGlobals, CircuitInit, EvtObjectAcxRequestPreprocess, DriverContext, RequestType, Set, Id);
}

//
// ACX Function: AcxCircuitInitAssignAcxCreateStreamCallback
//
typedef
_Must_inspect_result_
_IRQL_requires_max_(PASSIVE_LEVEL)
WDFAPI
NTSTATUS
(NTAPI *PFN_ACXCIRCUITINITASSIGNACXCREATESTREAMCALLBACK)(
    _In_
    PACX_DRIVER_GLOBALS DriverGlobals,
    _In_
    PACXCIRCUIT_INIT CircuitInit,
    _In_
    PFN_ACX_CIRCUIT_CREATE_STREAM EvtCircuitCreateStream
    );

_Must_inspect_result_
_IRQL_requires_max_(PASSIVE_LEVEL)
FORCEINLINE
NTSTATUS
AcxCircuitInitAssignAcxCreateStreamCallback(
    _In_
    PACXCIRCUIT_INIT CircuitInit,
    _In_
    PFN_ACX_CIRCUIT_CREATE_STREAM EvtCircuitCreateStream
    )
{
    return ((PFN_ACXCIRCUITINITASSIGNACXCREATESTREAMCALLBACK) AcxFunctions[AcxCircuitInitAssignAcxCreateStreamCallbackTableIndex])(AcxDriverGlobals, CircuitInit, EvtCircuitCreateStream);
}

//
// ACX Function: AcxCircuitInitDisableDefaultStreamBridgeHandling
//
typedef
_IRQL_requires_max_(DISPATCH_LEVEL)
WDFAPI
VOID
(NTAPI *PFN_ACXCIRCUITINITDISABLEDEFAULTSTREAMBRIDGEHANDLING)(
    _In_
    PACX_DRIVER_GLOBALS DriverGlobals,
    _In_
    PACXCIRCUIT_INIT CircuitInit
    );

_IRQL_requires_max_(DISPATCH_LEVEL)
FORCEINLINE
VOID
AcxCircuitInitDisableDefaultStreamBridgeHandling(
    _In_
    PACXCIRCUIT_INIT CircuitInit
    )
{
    ((PFN_ACXCIRCUITINITDISABLEDEFAULTSTREAMBRIDGEHANDLING) AcxFunctions[AcxCircuitInitDisableDefaultStreamBridgeHandlingTableIndex])(AcxDriverGlobals, CircuitInit);
}

//
// ACX Function: AcxCircuitCreate
//
typedef
_Must_inspect_result_
_IRQL_requires_max_(PASSIVE_LEVEL)
WDFAPI
NTSTATUS
(NTAPI *PFN_ACXCIRCUITCREATE)(
    _In_
    PACX_DRIVER_GLOBALS DriverGlobals,
    _In_
    WDFDEVICE Device,
    _In_
    PWDF_OBJECT_ATTRIBUTES Attributes,
    _In_
    PACXCIRCUIT_INIT* Config,
    _Out_
    ACXCIRCUIT* Circuit
    );

_Must_inspect_result_
_IRQL_requires_max_(PASSIVE_LEVEL)
FORCEINLINE
NTSTATUS
AcxCircuitCreate(
    _In_
    WDFDEVICE Device,
    _In_
    PWDF_OBJECT_ATTRIBUTES Attributes,
    _In_
    PACXCIRCUIT_INIT* Config,
    _Out_
    ACXCIRCUIT* Circuit
    )
{
    return ((PFN_ACXCIRCUITCREATE) AcxFunctions[AcxCircuitCreateTableIndex])(AcxDriverGlobals, Device, Attributes, Config, Circuit);
}

//
// ACX Function: AcxCircuitAddEvents
//
typedef
_Must_inspect_result_
_IRQL_requires_max_(PASSIVE_LEVEL)
WDFAPI
NTSTATUS
(NTAPI *PFN_ACXCIRCUITADDEVENTS)(
    _In_
    PACX_DRIVER_GLOBALS DriverGlobals,
    _In_
    ACXCIRCUIT Circuit,
    _In_reads_(EventsCount)
    ACXEVENT* Events,
    _In_
    ULONG EventsCount
    );

_Must_inspect_result_
_IRQL_requires_max_(PASSIVE_LEVEL)
FORCEINLINE
NTSTATUS
AcxCircuitAddEvents(
    _In_
    ACXCIRCUIT Circuit,
    _In_reads_(EventsCount)
    ACXEVENT* Events,
    _In_
    ULONG EventsCount
    )
{
    return ((PFN_ACXCIRCUITADDEVENTS) AcxFunctions[AcxCircuitAddEventsTableIndex])(AcxDriverGlobals, Circuit, Events, EventsCount);
}

//
// ACX Function: AcxCircuitAddElements
//
typedef
_Must_inspect_result_
_IRQL_requires_max_(PASSIVE_LEVEL)
WDFAPI
NTSTATUS
(NTAPI *PFN_ACXCIRCUITADDELEMENTS)(
    _In_
    PACX_DRIVER_GLOBALS DriverGlobals,
    _In_
    ACXCIRCUIT Circuit,
    _In_reads_(ElementsCount)
    ACXELEMENT* Elements,
    _In_
    ULONG ElementsCount
    );

_Must_inspect_result_
_IRQL_requires_max_(PASSIVE_LEVEL)
FORCEINLINE
NTSTATUS
AcxCircuitAddElements(
    _In_
    ACXCIRCUIT Circuit,
    _In_reads_(ElementsCount)
    ACXELEMENT* Elements,
    _In_
    ULONG ElementsCount
    )
{
    return ((PFN_ACXCIRCUITADDELEMENTS) AcxFunctions[AcxCircuitAddElementsTableIndex])(AcxDriverGlobals, Circuit, Elements, ElementsCount);
}

//
// ACX Function: AcxCircuitGetElementsCount
//
typedef
_Must_inspect_result_
_IRQL_requires_max_(DISPATCH_LEVEL)
WDFAPI
ULONG
(NTAPI *PFN_ACXCIRCUITGETELEMENTSCOUNT)(
    _In_
    PACX_DRIVER_GLOBALS DriverGlobals,
    _In_
    ACXCIRCUIT Circuit
    );

_Must_inspect_result_
_IRQL_requires_max_(DISPATCH_LEVEL)
FORCEINLINE
ULONG
AcxCircuitGetElementsCount(
    _In_
    ACXCIRCUIT Circuit
    )
{
    return ((PFN_ACXCIRCUITGETELEMENTSCOUNT) AcxFunctions[AcxCircuitGetElementsCountTableIndex])(AcxDriverGlobals, Circuit);
}

//
// ACX Function: AcxCircuitGetElementById
//
typedef
_Must_inspect_result_
_IRQL_requires_max_(DISPATCH_LEVEL)
WDFAPI
ACXELEMENT
(NTAPI *PFN_ACXCIRCUITGETELEMENTBYID)(
    _In_
    PACX_DRIVER_GLOBALS DriverGlobals,
    _In_
    ACXCIRCUIT Circuit,
    _In_
    ULONG ElementId
    );

_Must_inspect_result_
_IRQL_requires_max_(DISPATCH_LEVEL)
FORCEINLINE
ACXELEMENT
AcxCircuitGetElementById(
    _In_
    ACXCIRCUIT Circuit,
    _In_
    ULONG ElementId
    )
{
    return ((PFN_ACXCIRCUITGETELEMENTBYID) AcxFunctions[AcxCircuitGetElementByIdTableIndex])(AcxDriverGlobals, Circuit, ElementId);
}

//
// ACX Function: AcxCircuitAddConnections
//
typedef
_Must_inspect_result_
_IRQL_requires_max_(PASSIVE_LEVEL)
WDFAPI
NTSTATUS
(NTAPI *PFN_ACXCIRCUITADDCONNECTIONS)(
    _In_
    PACX_DRIVER_GLOBALS DriverGlobals,
    _In_
    ACXCIRCUIT Circuit,
    _In_reads_(ConnectionsCount)
    PACX_CONNECTION Connections,
    _In_
    ULONG ConnectionsCount
    );

_Must_inspect_result_
_IRQL_requires_max_(PASSIVE_LEVEL)
FORCEINLINE
NTSTATUS
AcxCircuitAddConnections(
    _In_
    ACXCIRCUIT Circuit,
    _In_reads_(ConnectionsCount)
    PACX_CONNECTION Connections,
    _In_
    ULONG ConnectionsCount
    )
{
    return ((PFN_ACXCIRCUITADDCONNECTIONS) AcxFunctions[AcxCircuitAddConnectionsTableIndex])(AcxDriverGlobals, Circuit, Connections, ConnectionsCount);
}

//
// ACX Function: AcxCircuitAddPhysicalConnections
//
typedef
_Must_inspect_result_
_IRQL_requires_max_(PASSIVE_LEVEL)
WDFAPI
NTSTATUS
(NTAPI *PFN_ACXCIRCUITADDPHYSICALCONNECTIONS)(
    _In_
    PACX_DRIVER_GLOBALS DriverGlobals,
    _In_
    ACXCIRCUIT Circuit,
    _In_reads_(ConnectionsCount)
    PACX_PHYSICAL_CONNECTION Connections,
    _In_
    ULONG ConnectionsCount
    );

_Must_inspect_result_
_IRQL_requires_max_(PASSIVE_LEVEL)
FORCEINLINE
NTSTATUS
AcxCircuitAddPhysicalConnections(
    _In_
    ACXCIRCUIT Circuit,
    _In_reads_(ConnectionsCount)
    PACX_PHYSICAL_CONNECTION Connections,
    _In_
    ULONG ConnectionsCount
    )
{
    return ((PFN_ACXCIRCUITADDPHYSICALCONNECTIONS) AcxFunctions[AcxCircuitAddPhysicalConnectionsTableIndex])(AcxDriverGlobals, Circuit, Connections, ConnectionsCount);
}

//
// ACX Function: AcxCircuitAddPins
//
typedef
_Must_inspect_result_
_IRQL_requires_max_(PASSIVE_LEVEL)
WDFAPI
NTSTATUS
(NTAPI *PFN_ACXCIRCUITADDPINS)(
    _In_
    PACX_DRIVER_GLOBALS DriverGlobals,
    _In_
    ACXCIRCUIT Circuit,
    _In_reads_(PinsCount)
    ACXPIN* Pins,
    _In_
    ULONG PinsCount
    );

_Must_inspect_result_
_IRQL_requires_max_(PASSIVE_LEVEL)
FORCEINLINE
NTSTATUS
AcxCircuitAddPins(
    _In_
    ACXCIRCUIT Circuit,
    _In_reads_(PinsCount)
    ACXPIN* Pins,
    _In_
    ULONG PinsCount
    )
{
    return ((PFN_ACXCIRCUITADDPINS) AcxFunctions[AcxCircuitAddPinsTableIndex])(AcxDriverGlobals, Circuit, Pins, PinsCount);
}

//
// ACX Function: AcxCircuitGetPinsCount
//
typedef
_Must_inspect_result_
_IRQL_requires_max_(DISPATCH_LEVEL)
WDFAPI
ULONG
(NTAPI *PFN_ACXCIRCUITGETPINSCOUNT)(
    _In_
    PACX_DRIVER_GLOBALS DriverGlobals,
    _In_
    ACXCIRCUIT Circuit
    );

_Must_inspect_result_
_IRQL_requires_max_(DISPATCH_LEVEL)
FORCEINLINE
ULONG
AcxCircuitGetPinsCount(
    _In_
    ACXCIRCUIT Circuit
    )
{
    return ((PFN_ACXCIRCUITGETPINSCOUNT) AcxFunctions[AcxCircuitGetPinsCountTableIndex])(AcxDriverGlobals, Circuit);
}

//
// ACX Function: AcxCircuitGetPinById
//
typedef
_Must_inspect_result_
_IRQL_requires_max_(DISPATCH_LEVEL)
WDFAPI
ACXPIN
(NTAPI *PFN_ACXCIRCUITGETPINBYID)(
    _In_
    PACX_DRIVER_GLOBALS DriverGlobals,
    _In_
    ACXCIRCUIT Circuit,
    _In_
    ULONG PinId
    );

_Must_inspect_result_
_IRQL_requires_max_(DISPATCH_LEVEL)
FORCEINLINE
ACXPIN
AcxCircuitGetPinById(
    _In_
    ACXCIRCUIT Circuit,
    _In_
    ULONG PinId
    )
{
    return ((PFN_ACXCIRCUITGETPINBYID) AcxFunctions[AcxCircuitGetPinByIdTableIndex])(AcxDriverGlobals, Circuit, PinId);
}

//
// ACX Function: AcxCircuitGetWdfDevice
//
typedef
_IRQL_requires_max_(DISPATCH_LEVEL)
WDFAPI
WDFDEVICE
(NTAPI *PFN_ACXCIRCUITGETWDFDEVICE)(
    _In_
    PACX_DRIVER_GLOBALS DriverGlobals,
    _In_
    ACXCIRCUIT Circuit
    );

_IRQL_requires_max_(DISPATCH_LEVEL)
FORCEINLINE
WDFDEVICE
AcxCircuitGetWdfDevice(
    _In_
    ACXCIRCUIT Circuit
    )
{
    return ((PFN_ACXCIRCUITGETWDFDEVICE) AcxFunctions[AcxCircuitGetWdfDeviceTableIndex])(AcxDriverGlobals, Circuit);
}

//
// ACX Function: AcxCircuitGetSymbolicLinkName
//
typedef
_IRQL_requires_max_(PASSIVE_LEVEL)
WDFAPI
WDFSTRING
(NTAPI *PFN_ACXCIRCUITGETSYMBOLICLINKNAME)(
    _In_
    PACX_DRIVER_GLOBALS DriverGlobals,
    _In_
    ACXCIRCUIT Circuit
    );

_IRQL_requires_max_(PASSIVE_LEVEL)
FORCEINLINE
WDFSTRING
AcxCircuitGetSymbolicLinkName(
    _In_
    ACXCIRCUIT Circuit
    )
{
    return ((PFN_ACXCIRCUITGETSYMBOLICLINKNAME) AcxFunctions[AcxCircuitGetSymbolicLinkNameTableIndex])(AcxDriverGlobals, Circuit);
}

//
// ACX Function: AcxCircuitDispatchAcxRequest
//
typedef
_Must_inspect_result_
_IRQL_requires_max_(PASSIVE_LEVEL)
WDFAPI
NTSTATUS
(NTAPI *PFN_ACXCIRCUITDISPATCHACXREQUEST)(
    _In_
    PACX_DRIVER_GLOBALS DriverGlobals,
    _In_
    ACXCIRCUIT Circuit,
    _In_
    WDFREQUEST Request
    );

_Must_inspect_result_
_IRQL_requires_max_(PASSIVE_LEVEL)
FORCEINLINE
NTSTATUS
AcxCircuitDispatchAcxRequest(
    _In_
    ACXCIRCUIT Circuit,
    _In_
    WDFREQUEST Request
    )
{
    return ((PFN_ACXCIRCUITDISPATCHACXREQUEST) AcxFunctions[AcxCircuitDispatchAcxRequestTableIndex])(AcxDriverGlobals, Circuit, Request);
}

//
// ACX Function: AcxCircuitStopIoActual
//
typedef
_Must_inspect_result_
_IRQL_requires_max_(PASSIVE_LEVEL)
WDFAPI
NTSTATUS
(NTAPI *PFN_ACXCIRCUITSTOPIOACTUAL)(
    _In_
    PACX_DRIVER_GLOBALS DriverGlobals,
    _In_
    ACXCIRCUIT Circuit,
    _In_
    ULONG Flags,
    _In_opt_
    PVOID ObjectTag,
    _In_
    LONG Line,
    _In_z_
    PCCH File
    );

_Must_inspect_result_
_IRQL_requires_max_(PASSIVE_LEVEL)
FORCEINLINE
NTSTATUS
AcxCircuitStopIoActual(
    _In_
    ACXCIRCUIT Circuit,
    _In_
    ULONG Flags,
    _In_opt_
    PVOID ObjectTag,
    _In_
    LONG Line,
    _In_z_
    PCCH File
    )
{
    return ((PFN_ACXCIRCUITSTOPIOACTUAL) AcxFunctions[AcxCircuitStopIoActualTableIndex])(AcxDriverGlobals, Circuit, Flags, ObjectTag, Line, File);
}

//
// ACX Function: AcxCircuitResumeIoActual
//
typedef
_IRQL_requires_max_(PASSIVE_LEVEL)
WDFAPI
VOID
(NTAPI *PFN_ACXCIRCUITRESUMEIOACTUAL)(
    _In_
    PACX_DRIVER_GLOBALS DriverGlobals,
    _In_
    ACXCIRCUIT Circuit,
    _In_opt_
    PVOID ObjectTag,
    _In_
    LONG Line,
    _In_z_
    PCCH File
    );

_IRQL_requires_max_(PASSIVE_LEVEL)
FORCEINLINE
VOID
AcxCircuitResumeIoActual(
    _In_
    ACXCIRCUIT Circuit,
    _In_opt_
    PVOID ObjectTag,
    _In_
    LONG Line,
    _In_z_
    PCCH File
    )
{
    ((PFN_ACXCIRCUITRESUMEIOACTUAL) AcxFunctions[AcxCircuitResumeIoActualTableIndex])(AcxDriverGlobals, Circuit, ObjectTag, Line, File);
}

//
// ACX Function: AcxCircuitGetNotificationId
//
typedef
_IRQL_requires_max_(DISPATCH_LEVEL)
WDFAPI
GUID
(NTAPI *PFN_ACXCIRCUITGETNOTIFICATIONID)(
    _In_
    PACX_DRIVER_GLOBALS DriverGlobals,
    _In_
    ACXCIRCUIT Circuit
    );

_IRQL_requires_max_(DISPATCH_LEVEL)
FORCEINLINE
GUID
AcxCircuitGetNotificationId(
    _In_
    ACXCIRCUIT Circuit
    )
{
    return ((PFN_ACXCIRCUITGETNOTIFICATIONID) AcxFunctions[AcxCircuitGetNotificationIdTableIndex])(AcxDriverGlobals, Circuit);
}

//
// ACX Function: AcxFactoryCircuitInitAllocate
//
typedef
_Must_inspect_result_
_IRQL_requires_max_(PASSIVE_LEVEL)
WDFAPI
PACXFACTORYCIRCUIT_INIT
(NTAPI *PFN_ACXFACTORYCIRCUITINITALLOCATE)(
    _In_
    PACX_DRIVER_GLOBALS DriverGlobals,
    _In_
    WDFDEVICE Device
    );

_Must_inspect_result_
_IRQL_requires_max_(PASSIVE_LEVEL)
FORCEINLINE
PACXFACTORYCIRCUIT_INIT
AcxFactoryCircuitInitAllocate(
    _In_
    WDFDEVICE Device
    )
{
    return ((PFN_ACXFACTORYCIRCUITINITALLOCATE) AcxFunctions[AcxFactoryCircuitInitAllocateTableIndex])(AcxDriverGlobals, Device);
}

//
// ACX Function: AcxFactoryCircuitInitFree
//
typedef
_IRQL_requires_max_(DISPATCH_LEVEL)
WDFAPI
VOID
(NTAPI *PFN_ACXFACTORYCIRCUITINITFREE)(
    _In_
    PACX_DRIVER_GLOBALS DriverGlobals,
    _In_
    PACXFACTORYCIRCUIT_INIT FactoryInit
    );

_IRQL_requires_max_(DISPATCH_LEVEL)
FORCEINLINE
VOID
AcxFactoryCircuitInitFree(
    _In_
    PACXFACTORYCIRCUIT_INIT FactoryInit
    )
{
    ((PFN_ACXFACTORYCIRCUITINITFREE) AcxFunctions[AcxFactoryCircuitInitFreeTableIndex])(AcxDriverGlobals, FactoryInit);
}

//
// ACX Function: AcxFactoryCircuitInitSetComponentId
//
typedef
_IRQL_requires_max_(DISPATCH_LEVEL)
WDFAPI
VOID
(NTAPI *PFN_ACXFACTORYCIRCUITINITSETCOMPONENTID)(
    _In_
    PACX_DRIVER_GLOBALS DriverGlobals,
    _In_
    PACXFACTORYCIRCUIT_INIT FactoryInit,
    _In_
    CONST GUID* ComponentId
    );

_IRQL_requires_max_(DISPATCH_LEVEL)
FORCEINLINE
VOID
AcxFactoryCircuitInitSetComponentId(
    _In_
    PACXFACTORYCIRCUIT_INIT FactoryInit,
    _In_
    CONST GUID* ComponentId
    )
{
    ((PFN_ACXFACTORYCIRCUITINITSETCOMPONENTID) AcxFunctions[AcxFactoryCircuitInitSetComponentIdTableIndex])(AcxDriverGlobals, FactoryInit, ComponentId);
}

//
// ACX Function: AcxFactoryCircuitInitAssignComponentUri
//
typedef
_Must_inspect_result_
_IRQL_requires_max_(PASSIVE_LEVEL)
WDFAPI
NTSTATUS
(NTAPI *PFN_ACXFACTORYCIRCUITINITASSIGNCOMPONENTURI)(
    _In_
    PACX_DRIVER_GLOBALS DriverGlobals,
    _In_
    PACXFACTORYCIRCUIT_INIT FactoryInit,
    _In_
    PCUNICODE_STRING ComponentUri
    );

_Must_inspect_result_
_IRQL_requires_max_(PASSIVE_LEVEL)
FORCEINLINE
NTSTATUS
AcxFactoryCircuitInitAssignComponentUri(
    _In_
    PACXFACTORYCIRCUIT_INIT FactoryInit,
    _In_
    PCUNICODE_STRING ComponentUri
    )
{
    return ((PFN_ACXFACTORYCIRCUITINITASSIGNCOMPONENTURI) AcxFunctions[AcxFactoryCircuitInitAssignComponentUriTableIndex])(AcxDriverGlobals, FactoryInit, ComponentUri);
}

//
// ACX Function: AcxFactoryCircuitInitAssignName
//
typedef
_Must_inspect_result_
_IRQL_requires_max_(PASSIVE_LEVEL)
WDFAPI
NTSTATUS
(NTAPI *PFN_ACXFACTORYCIRCUITINITASSIGNNAME)(
    _In_
    PACX_DRIVER_GLOBALS DriverGlobals,
    _In_
    PACXFACTORYCIRCUIT_INIT FactoryInit,
    _In_
    PCUNICODE_STRING FactoryName
    );

_Must_inspect_result_
_IRQL_requires_max_(PASSIVE_LEVEL)
FORCEINLINE
NTSTATUS
AcxFactoryCircuitInitAssignName(
    _In_
    PACXFACTORYCIRCUIT_INIT FactoryInit,
    _In_
    PCUNICODE_STRING FactoryName
    )
{
    return ((PFN_ACXFACTORYCIRCUITINITASSIGNNAME) AcxFunctions[AcxFactoryCircuitInitAssignNameTableIndex])(AcxDriverGlobals, FactoryInit, FactoryName);
}

//
// ACX Function: AcxFactoryCircuitInitAssignCategories
//
typedef
_Must_inspect_result_
_IRQL_requires_max_(PASSIVE_LEVEL)
WDFAPI
NTSTATUS
(NTAPI *PFN_ACXFACTORYCIRCUITINITASSIGNCATEGORIES)(
    _In_
    PACX_DRIVER_GLOBALS DriverGlobals,
    _In_
    PACXFACTORYCIRCUIT_INIT FactoryInit,
    _In_reads_(CategoriesCount)
    CONST GUID* Categories,
    _In_
    ULONG CategoriesCount
    );

_Must_inspect_result_
_IRQL_requires_max_(PASSIVE_LEVEL)
FORCEINLINE
NTSTATUS
AcxFactoryCircuitInitAssignCategories(
    _In_
    PACXFACTORYCIRCUIT_INIT FactoryInit,
    _In_reads_(CategoriesCount)
    CONST GUID* Categories,
    _In_
    ULONG CategoriesCount
    )
{
    return ((PFN_ACXFACTORYCIRCUITINITASSIGNCATEGORIES) AcxFunctions[AcxFactoryCircuitInitAssignCategoriesTableIndex])(AcxDriverGlobals, FactoryInit, Categories, CategoriesCount);
}

//
// ACX Function: AcxFactoryCircuitInitAssignProperties
//
typedef
_Must_inspect_result_
_IRQL_requires_max_(PASSIVE_LEVEL)
WDFAPI
NTSTATUS
(NTAPI *PFN_ACXFACTORYCIRCUITINITASSIGNPROPERTIES)(
    _In_
    PACX_DRIVER_GLOBALS DriverGlobals,
    _In_
    PACXFACTORYCIRCUIT_INIT FactoryInit,
    _In_reads_(PropertiesCount)
    PACX_PROPERTY_ITEM Properties,
    _In_
    ULONG PropertiesCount
    );

_Must_inspect_result_
_IRQL_requires_max_(PASSIVE_LEVEL)
FORCEINLINE
NTSTATUS
AcxFactoryCircuitInitAssignProperties(
    _In_
    PACXFACTORYCIRCUIT_INIT FactoryInit,
    _In_reads_(PropertiesCount)
    PACX_PROPERTY_ITEM Properties,
    _In_
    ULONG PropertiesCount
    )
{
    return ((PFN_ACXFACTORYCIRCUITINITASSIGNPROPERTIES) AcxFunctions[AcxFactoryCircuitInitAssignPropertiesTableIndex])(AcxDriverGlobals, FactoryInit, Properties, PropertiesCount);
}

//
// ACX Function: AcxFactoryCircuitInitAssignMethods
//
typedef
_Must_inspect_result_
_IRQL_requires_max_(PASSIVE_LEVEL)
WDFAPI
NTSTATUS
(NTAPI *PFN_ACXFACTORYCIRCUITINITASSIGNMETHODS)(
    _In_
    PACX_DRIVER_GLOBALS DriverGlobals,
    _In_
    PACXFACTORYCIRCUIT_INIT FactoryInit,
    _In_reads_(MethodsCount)
    PACX_METHOD_ITEM Methods,
    _In_
    ULONG MethodsCount
    );

_Must_inspect_result_
_IRQL_requires_max_(PASSIVE_LEVEL)
FORCEINLINE
NTSTATUS
AcxFactoryCircuitInitAssignMethods(
    _In_
    PACXFACTORYCIRCUIT_INIT FactoryInit,
    _In_reads_(MethodsCount)
    PACX_METHOD_ITEM Methods,
    _In_
    ULONG MethodsCount
    )
{
    return ((PFN_ACXFACTORYCIRCUITINITASSIGNMETHODS) AcxFunctions[AcxFactoryCircuitInitAssignMethodsTableIndex])(AcxDriverGlobals, FactoryInit, Methods, MethodsCount);
}

//
// ACX Function: AcxFactoryCircuitInitSetOperationCallbacks
//
typedef
_IRQL_requires_max_(PASSIVE_LEVEL)
WDFAPI
VOID
(NTAPI *PFN_ACXFACTORYCIRCUITINITSETOPERATIONCALLBACKS)(
    _In_
    PACX_DRIVER_GLOBALS DriverGlobals,
    _In_
    PACXFACTORYCIRCUIT_INIT FactoryInit,
    _In_
    PACX_FACTORY_CIRCUIT_OPERATION_CALLBACKS EvtOperationCallbacks
    );

_IRQL_requires_max_(PASSIVE_LEVEL)
FORCEINLINE
VOID
AcxFactoryCircuitInitSetOperationCallbacks(
    _In_
    PACXFACTORYCIRCUIT_INIT FactoryInit,
    _In_
    PACX_FACTORY_CIRCUIT_OPERATION_CALLBACKS EvtOperationCallbacks
    )
{
    ((PFN_ACXFACTORYCIRCUITINITSETOPERATIONCALLBACKS) AcxFunctions[AcxFactoryCircuitInitSetOperationCallbacksTableIndex])(AcxDriverGlobals, FactoryInit, EvtOperationCallbacks);
}

//
// ACX Function: AcxFactoryCircuitInitSetAcxCircuitPnpPowerCallbacks
//
typedef
_IRQL_requires_max_(PASSIVE_LEVEL)
WDFAPI
VOID
(NTAPI *PFN_ACXFACTORYCIRCUITINITSETACXCIRCUITPNPPOWERCALLBACKS)(
    _In_
    PACX_DRIVER_GLOBALS DriverGlobals,
    _In_
    PACXFACTORYCIRCUIT_INIT FactoryInit,
    _In_
    PACX_FACTORY_CIRCUIT_PNPPOWER_CALLBACKS EvtPnpPowerCallbacks
    );

_IRQL_requires_max_(PASSIVE_LEVEL)
FORCEINLINE
VOID
AcxFactoryCircuitInitSetAcxCircuitPnpPowerCallbacks(
    _In_
    PACXFACTORYCIRCUIT_INIT FactoryInit,
    _In_
    PACX_FACTORY_CIRCUIT_PNPPOWER_CALLBACKS EvtPnpPowerCallbacks
    )
{
    ((PFN_ACXFACTORYCIRCUITINITSETACXCIRCUITPNPPOWERCALLBACKS) AcxFunctions[AcxFactoryCircuitInitSetAcxCircuitPnpPowerCallbacksTableIndex])(AcxDriverGlobals, FactoryInit, EvtPnpPowerCallbacks);
}

//
// ACX Function: AcxFactoryCircuitInitAssignAcxRequestPreprocessCallback
//
typedef
_Must_inspect_result_
_IRQL_requires_max_(PASSIVE_LEVEL)
WDFAPI
NTSTATUS
(NTAPI *PFN_ACXFACTORYCIRCUITINITASSIGNACXREQUESTPREPROCESSCALLBACK)(
    _In_
    PACX_DRIVER_GLOBALS DriverGlobals,
    _In_
    PACXFACTORYCIRCUIT_INIT FactoryInit,
    _In_
    PFN_ACX_OBJECT_PREPROCESS_REQUEST EvtObjectAcxRequestPreprocess,
    _In_opt_
    ACXCONTEXT DriverContext,
    _In_
    ACX_REQUEST_TYPE RequestType,
    _In_opt_
    CONST GUID* Set,
    _In_
    ULONG Id
    );

_Must_inspect_result_
_IRQL_requires_max_(PASSIVE_LEVEL)
FORCEINLINE
NTSTATUS
AcxFactoryCircuitInitAssignAcxRequestPreprocessCallback(
    _In_
    PACXFACTORYCIRCUIT_INIT FactoryInit,
    _In_
    PFN_ACX_OBJECT_PREPROCESS_REQUEST EvtObjectAcxRequestPreprocess,
    _In_opt_
    ACXCONTEXT DriverContext,
    _In_
    ACX_REQUEST_TYPE RequestType,
    _In_opt_
    CONST GUID* Set,
    _In_
    ULONG Id
    )
{
    return ((PFN_ACXFACTORYCIRCUITINITASSIGNACXREQUESTPREPROCESSCALLBACK) AcxFunctions[AcxFactoryCircuitInitAssignAcxRequestPreprocessCallbackTableIndex])(AcxDriverGlobals, FactoryInit, EvtObjectAcxRequestPreprocess, DriverContext, RequestType, Set, Id);
}

//
// ACX Function: AcxFactoryCircuitCreate
//
typedef
_Must_inspect_result_
_IRQL_requires_max_(PASSIVE_LEVEL)
WDFAPI
NTSTATUS
(NTAPI *PFN_ACXFACTORYCIRCUITCREATE)(
    _In_
    PACX_DRIVER_GLOBALS DriverGlobals,
    _In_
    WDFDEVICE Device,
    _In_
    PWDF_OBJECT_ATTRIBUTES Attributes,
    _In_
    PACXFACTORYCIRCUIT_INIT* Config,
    _Out_
    ACXFACTORYCIRCUIT* Factory
    );

_Must_inspect_result_
_IRQL_requires_max_(PASSIVE_LEVEL)
FORCEINLINE
NTSTATUS
AcxFactoryCircuitCreate(
    _In_
    WDFDEVICE Device,
    _In_
    PWDF_OBJECT_ATTRIBUTES Attributes,
    _In_
    PACXFACTORYCIRCUIT_INIT* Config,
    _Out_
    ACXFACTORYCIRCUIT* Factory
    )
{
    return ((PFN_ACXFACTORYCIRCUITCREATE) AcxFunctions[AcxFactoryCircuitCreateTableIndex])(AcxDriverGlobals, Device, Attributes, Config, Factory);
}

//
// ACX Function: AcxFactoryCircuitAddElements
//
typedef
_Must_inspect_result_
_IRQL_requires_max_(PASSIVE_LEVEL)
WDFAPI
NTSTATUS
(NTAPI *PFN_ACXFACTORYCIRCUITADDELEMENTS)(
    _In_
    PACX_DRIVER_GLOBALS DriverGlobals,
    _In_
    ACXFACTORYCIRCUIT Circuit,
    _In_reads_(ElementsCount)
    ACXELEMENT* Elements,
    _In_
    ULONG ElementsCount
    );

_Must_inspect_result_
_IRQL_requires_max_(PASSIVE_LEVEL)
FORCEINLINE
NTSTATUS
AcxFactoryCircuitAddElements(
    _In_
    ACXFACTORYCIRCUIT Circuit,
    _In_reads_(ElementsCount)
    ACXELEMENT* Elements,
    _In_
    ULONG ElementsCount
    )
{
    return ((PFN_ACXFACTORYCIRCUITADDELEMENTS) AcxFunctions[AcxFactoryCircuitAddElementsTableIndex])(AcxDriverGlobals, Circuit, Elements, ElementsCount);
}

//
// ACX Function: AcxFactoryCircuitGetSymbolicLinkName
//
typedef
_IRQL_requires_max_(PASSIVE_LEVEL)
WDFAPI
WDFSTRING
(NTAPI *PFN_ACXFACTORYCIRCUITGETSYMBOLICLINKNAME)(
    _In_
    PACX_DRIVER_GLOBALS DriverGlobals,
    _In_
    ACXCIRCUIT Circuit
    );

_IRQL_requires_max_(PASSIVE_LEVEL)
FORCEINLINE
WDFSTRING
AcxFactoryCircuitGetSymbolicLinkName(
    _In_
    ACXCIRCUIT Circuit
    )
{
    return ((PFN_ACXFACTORYCIRCUITGETSYMBOLICLINKNAME) AcxFunctions[AcxFactoryCircuitGetSymbolicLinkNameTableIndex])(AcxDriverGlobals, Circuit);
}



#endif // (NTDDI_VERSION >= NTDDI_WIN2K)


WDF_EXTERN_C_END

#endif // _ACXCIRCUIT_H_

